name: Build and release client

on:
  push:
  pull_request:
  release:
    types: [published]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-assets:
    runs-on: ubuntu-20.04
    steps:
      - name: Pull repository
        uses: actions/checkout@v2

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true

      - name: Install inkscape fresh version (to process svg into png)
        run: |
          sudo apt-get install -y software-properties-common
          sudo add-apt-repository -y ppa:inkscape.dev/stable
          sudo apt-get install -y inkscape

      - name: Test bundlebox
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p bundlebox

      - name: Process resources into assets
        run: ./build.sh

      - name: Archive assets as an artifacts
        uses: actions/upload-artifact@v2
        with:
          name: assets
          path: game/assets

  build-linux:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true

      - name: Install libasound2-dev (dep of alsa-sys crate)
        run:  sudo apt install libasound2-dev

      - name: Install libudev-dev (dep of libudev-sys crate)
        run:  sudo apt install libudev-dev

      - name: Test game
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p game --release

      - name: Build game
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: -p game --release

      - name: Bundle game binary
        uses: actions/upload-artifact@v2
        with:
          name: game_linux
          path: target/release/game

  build-windows:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true

      - name: Test game
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p game --release

      - name: Build game
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: -p game --release

      - name: Bundle game binary
        uses: actions/upload-artifact@v2
        with:
          name: game_windows
          path: target/release/game.exe

  bundle-distros:
    runs-on: ubuntu-20.04
    needs:
      - build-assets
      - build-linux
      - build-windows
    steps:
      - name: Download assets from build-assets job for linux
        uses: actions/download-artifact@v2
        with:
          name: assets
          path: linux/assets

      - name: Download binary from build-linux job
        uses: actions/download-artifact@v2
        with:
          name: game_linux
          path: linux/

      - name: Bundle linux distro
        uses: actions/upload-artifact@v2
        with:
          name: zombie_redemption_linux
          path: linux/**

      - name: Download assets from build-assets job for windows
        uses: actions/download-artifact@v2
        with:
          name: assets
          path: windows/assets

      - name: Download binary from build-windows job
        uses: actions/download-artifact@v2
        with:
          name: game_windows
          path: windows/

      - name: Bundle windows distro
        uses: actions/upload-artifact@v2
        with:
          name: zombie_redemption_windows
          path: windows/**

      - name: Remove intermediate artifacts
        uses: geekyeggo/delete-artifact@v1
        with:
          name: |
            assets
            game_linux
            game_windows

  upload-release:
    runs-on: ubuntu-20.04
    needs: [bundle-distros]
    if: github.event.release
    steps:
      - name: "[linux] Download distro"
        uses: actions/download-artifact@v2
        with:
          name: zombie_redemption_linux
          path: zombie_redemption/

      - name: "[linux] Pack tarball"
        run: |
          chmod +x zombie_redemption/game
          tar cvfz zombie_redemption.tar.gz zombie_redemption/

      - name: "[linux] Remove distro directory"
        run: rm -rvf zombie_redemption

      - name: "[linux] Bundle release"
        uses: actions/upload-artifact@v2
        with:
          name: zombie_redemption_linux_release
          path: zombie_redemption.tar.gz

      - name: "[linux] Remove distro artifact"
        uses: geekyeggo/delete-artifact@v1
        with:
          name: zombie_redemption_linux

      # ============= Windows part =================

      - name: "[windows] Download distro"
        uses: actions/download-artifact@v2
        with:
          name: zombie_redemption_windows
          path: zombie_redemption/

      - name: "[windows] Pack in zip"
        run: zip -r zombie_redemption.zip zombie_redemption/

      - name: "[windows] Remove distro directory"
        run: rm -rvf zombie_redemption

      - name: "[windows] Bundle release"
        uses: actions/upload-artifact@v2
        with:
          name: zombie_redemption_windows_release
          path: zombie_redemption.zip

      - name: "[windows] Remove distro artifact"
        uses: geekyeggo/delete-artifact@v1
        with:
          name: zombie_redemption_windows
